diff --git a/CMakeLists.txt b/CMakeLists.txt
index c3a9f01..c2fce47 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,7 +1,8 @@
-cmake_minimum_required(VERSION 2.6)
+cmake_minimum_required(VERSION 3.0.2)
 
 ##project
 project(openfec C)
+include(GNUInstallDirs)
 
 ENABLE_TESTING()
 
@@ -20,20 +21,10 @@ message(STATUS "Debug mode ON" )
 else(DEBUG STREQUAL "ON")
 # Release mode
 set(CMAKE_BUILD_TYPE Release)
-set(CMAKE_C_FLAGS "-O4")
 message(STATUS "Debug mode OFF")
 
 endif (DEBUG STREQUAL "ON")
 
-set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE})
-set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE})
-MARK_AS_ADVANCED(
-        LIBRARY_OUTPUT_PATH
-        EXECUTABLE_OUTPUT_PATH
-)
-
-link_directories(${LIBRARY_OUTPUT_PATH})
-
 add_subdirectory(src)
 add_subdirectory(applis/eperftool)
 add_subdirectory(applis/howto_examples/simple_client_server)
diff --git a/applis/eperftool/CMakeLists.txt b/applis/eperftool/CMakeLists.txt
index 326a5e5..ca29521 100644
--- a/applis/eperftool/CMakeLists.txt
+++ b/applis/eperftool/CMakeLists.txt
@@ -1,9 +1,9 @@
 file (GLOB eperftool_sources ./*)
 
-set(EPERFTOOL_BIN ${PROJECT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE}/eperftool CACHE STRING "eperftool dir")
+set(EPERFTOOL_BIN ${PROJECT_BINARY_DIR}/applis/eperftool/eperftool CACHE STRING "eperftool dir")
 add_executable( eperftool ${eperftool_sources})
 
 
 target_link_libraries( eperftool openfec m)
 
-
+install(TARGETS eperftool)
diff --git a/applis/howto_examples/simple_client_server/CMakeLists.txt b/applis/howto_examples/simple_client_server/CMakeLists.txt
index f8a301d..d3eed50 100644
--- a/applis/howto_examples/simple_client_server/CMakeLists.txt
+++ b/applis/howto_examples/simple_client_server/CMakeLists.txt
@@ -12,3 +12,5 @@ set(SIMPLE_SERVER_BIN ${PROJECT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE}/simple_clien
 add_executable(simple_client ${simple_client_sources})
 
 target_link_libraries(simple_client openfec m)
+
+install(TARGETS simple_server simple_client)
\ No newline at end of file
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index bd190d4..c850b45 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -27,3 +27,5 @@ target_link_libraries(openfec m)
 
 #target_link_libraries(openfec pthread IL)
 #target_link_libraries(openfec pthread)
+
+install(TARGETS openfec DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR})
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
index 630d950..ac25678 100644
--- a/tests/CMakeLists.txt
+++ b/tests/CMakeLists.txt
@@ -1,19 +1,19 @@
 # list of dedicated binary tests
 add_executable(test_create_instance create_instance_test.c)
 target_link_libraries(test_create_instance openfec m)
-add_test("create_instance" ${EXECUTABLE_OUTPUT_PATH}/test_create_instance)
+add_test("create_instance" ${PROJECT_BINARY_DIR}/tests/test_create_instance)
 set_tests_properties ("create_instance"
 	PROPERTIES FAIL_REGULAR_EXPRESSION "ERROR;FAILURE")
 
 add_executable(test_encoder_instance encoder_instance_test.c)
 target_link_libraries(test_encoder_instance openfec m)
-add_test("encoder_instance" ${EXECUTABLE_OUTPUT_PATH}/test_encoder_instance)
+add_test("encoder_instance" ${PROJECT_BINARY_DIR}/tests/test_encoder_instance)
 set_tests_properties ("encoder_instance"
 	PROPERTIES FAIL_REGULAR_EXPRESSION "ERROR;FAILURE")
 
 add_executable(test_code_params code_params_test.c)
 target_link_libraries(test_code_params openfec m)
-add_test("code_params" ${EXECUTABLE_OUTPUT_PATH}/test_code_params)
+add_test("code_params" ${PROJECT_BINARY_DIR}/tests/test_code_params)
 set_tests_properties ("code_params"
 	PROPERTIES FAIL_REGULAR_EXPRESSION "ERROR;FAILURE")
 
diff --git a/tools/descr_stats_v1.2/CMakeLists.txt b/tools/descr_stats_v1.2/CMakeLists.txt
index b3732e9..471d732 100644
--- a/tools/descr_stats_v1.2/CMakeLists.txt
+++ b/tools/descr_stats_v1.2/CMakeLists.txt
@@ -4,3 +4,5 @@ set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/perf_eval)
 add_executable(descr_stats  ${descr_stat_sources})
 
 target_link_libraries( descr_stats  m)
+
+install(TARGETS descr_stats)
